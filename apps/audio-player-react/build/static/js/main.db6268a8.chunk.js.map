{"version":3,"sources":["components/images/play_button.svg","components/images/pause_button.svg","components/images/volumeIcon.svg","components/images/volumeMute.svg","components/images/Forgiveness.jpg","components/images/turningpoint.jpg","components/audio/Music for a Love Story.wav","components/audio/Turning Point.wav","components/PlayButton.jsx","components/AudioProgress.jsx","components/AudioTimers.jsx","components/AudioPlayerTitle.jsx","components/AudioCenter.jsx","components/AudioVolume.jsx","components/AlbumCover.jsx","components/AudioPlayer.jsx","components/data/MediaMusic.jsx","components/AudioPlayerList.jsx","components/App.jsx","index.js"],"names":["module","exports","PlayButton","src","this","props","image","alt","className","onClick","playState","React","Component","AudioProgress","defaultValue","componentDidMount","progressTimer","setInterval","progressFollow","progressWidth","progressBar","current","clientWidth","progressBarValue","pureTime","pureDuration","buttonPosition","value","setState","progressButton","left","changeLocation","event","percent","nativeEvent","offsetX","target","offsetWidth","newTime","Number","updateCurrentTime","state","createRef","clearInterval","timerID","type","max","ref","style","AudioTimers","currentTime","timeRemaining","AudioPlayerTitle","title","composer","AudioCenter","AudioVolume","volumeBarVisibilityState","min","step","volume","onChange","changeVolume","onMouseLeave","volumeBarVisibility","onMouseOver","volumeIcon","muteVolume","AlbumCover","imageSrc","AudioPlayer","e","audio","ended","load","buttonImage","playButtonImage","pauseButtonImage","play","pause","getTimeCalc","Math","floor","toFixed","getDuration","time","duration","pureTimeAndDuration","volumeImage","volumeIconMute","muted","playButton","secondClass","audioFile","onTimeUpdate","onDurationChange","onEnded","onLoad","MediaMusic","audioName","turningPointAudio","id","turningPointImage","musicForALoveStoryAudio","forgivenessImage","AudioPlayerList","players","map","player","key","App","class","href","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.db6268a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play_button.192e9085.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause_button.e72c6016.svg\";","module.exports = __webpack_public_path__ + \"static/media/volumeIcon.385dc577.svg\";","module.exports = __webpack_public_path__ + \"static/media/volumeMute.244e62e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Forgiveness.30b56028.jpg\";","module.exports = __webpack_public_path__ + \"static/media/turningpoint.5ff1be29.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Music for a Love Story.6b993eb2.wav\";","module.exports = __webpack_public_path__ + \"static/media/Turning Point.dd57a75f.wav\";","import React from \"react\";\r\nimport \"./PlayButton..css\";\r\n\r\nclass PlayButton extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<img\r\n\t\t\t\tsrc={this.props.image}\r\n\t\t\t\talt='play and pause button'\r\n\t\t\t\tclassName='play-button'\r\n\t\t\t\tonClick={this.props.playState}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PlayButton;\r\n","import React from \"react\";\r\nimport \"./AudioCenter.css\";\r\n\r\nclass AudioProgress extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { progressBarValue: \"0\" };\r\n\t\tthis.progressButton = React.createRef();\r\n\t\tthis.progressBar = React.createRef();\r\n\t}\r\n\r\n\tdefaultValue = 0;\r\n\tcomponentDidMount = () => {\r\n\t\tthis.progressTimer = setInterval(() => this.progressFollow(), 200);\r\n\t};\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t}\r\n\r\n\tprogressFollow = () => {\r\n\t\tlet progressWidth = this.progressBar.current.clientWidth / 100;\r\n\r\n\t\tconst progressBarValue =\r\n\t\t\t(this.props.pureTime / this.props.pureDuration) * 100;\r\n\t\tconst buttonPosition = `${\r\n\t\t\tthis.progressBar.current.value * progressWidth - 4\r\n\t\t}px`;\r\n\r\n\t\tthis.setState({ progressBarValue: progressBarValue });\r\n\t\tthis.setState({ progressButton: { left: buttonPosition } });\r\n\t};\r\n\r\n\tchangeLocation = (event) => {\r\n\t\tlet progressWidth = this.progressBar.current.clientWidth;\r\n\t\tlet percent = event.nativeEvent.offsetX / event.target.offsetWidth;\r\n\t\tlet newTime = this.props.pureDuration * percent;\r\n\r\n\t\tconst buttonPosition = `${percent * progressWidth - 4}px`;\r\n\t\tconst progressBarValue = percent * 100;\r\n\r\n\t\tthis.setState({\r\n\t\t\tprogressBarValue: Number(progressBarValue),\r\n\t\t\tprogressButton: { left: buttonPosition },\r\n\t\t});\r\n\t\tthis.props.updateCurrentTime(newTime);\r\n\t\t// this.audio.currentTime = this.audio.duration * percent;\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='progress-container' onClick={this.changeLocation}>\r\n\t\t\t\t<progress\r\n\t\t\t\t\tclassName='audio-progress'\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tmax='100'\r\n\t\t\t\t\tvalue={this.state.progressBarValue || 0}\r\n\t\t\t\t\tref={this.progressBar}></progress>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='audio-progress-button'\r\n\t\t\t\t\tref={this.progressButton}\r\n\t\t\t\t\tstyle={this.state.progressButton}></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AudioProgress;\r\n","import React from \"react\";\r\nimport \"./AudioCenter.css\";\r\n\r\nclass AudioTimers extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='audio-timers-row'>\r\n\t\t\t\t<div className='audio-current-position'>\r\n\t\t\t\t\t<p>{this.props.currentTime}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='audio-time-remaining'>\r\n\t\t\t\t\t<p className='time-remaining-text'>{this.props.timeRemaining}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default AudioTimers;\r\n\r\n// Get time (this.audio.currentTime) update state with it, and then add that as prop to render spots here. Might just need to add as props and not update state.\r\n","import React from \"react\";\r\nimport \"./AudioCenter.css\";\r\n\r\nconst AudioPlayerTitle = (props) => {\r\n\treturn (\r\n\t\t<p className='audio-player-title'>\r\n\t\t\t<strong className='audio-strong'>{props.title} </strong>\r\n\t\t\t<small className='audio-small'>|</small> {props.composer}\r\n\t\t</p>\r\n\t);\r\n};\r\nexport default AudioPlayerTitle;\r\n","import React from \"react\";\r\nimport \"./AudioCenter.css\";\r\nimport AudioProgress from \"./AudioProgress\";\r\nimport AudioTimers from \"./AudioTimers\";\r\nimport AudioPlayerTitle from \"./AudioPlayerTitle\";\r\n\r\nclass AudioCenter extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='audio-center'>\r\n\t\t\t\t<AudioPlayerTitle\r\n\t\t\t\t\ttitle={this.props.title}\r\n\t\t\t\t\tcomposer={this.props.composer}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className='audio-player-ghost'></div>\r\n\r\n\t\t\t\t<AudioProgress\r\n\t\t\t\t\tpureTime={this.props.pureTime}\r\n\t\t\t\t\tpureDuration={this.props.pureDuration}\r\n\t\t\t\t\tonClick={this.changeLocation}\r\n\t\t\t\t\tupdateCurrentTime={this.props.updateCurrentTime}\r\n\t\t\t\t/>\r\n\t\t\t\t<AudioTimers\r\n\t\t\t\t\tcurrentTime={this.props.currentTime}\r\n\t\t\t\t\ttimeRemaining={this.props.timeRemaining}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default AudioCenter;\r\n","import \"./AudioVolume.css\";\r\nimport React from \"react\";\r\n\r\nconst AudioVolume = (props) => {\r\n\treturn (\r\n\t\t<div className='volume-container'>\r\n\t\t\t<input\r\n\t\t\t\tclassName={`audio-volumeBar ${props.volumeBarVisibilityState}`}\r\n\t\t\t\ttype='range'\r\n\t\t\t\tmin='0'\r\n\t\t\t\tmax='1'\r\n\t\t\t\tstep='0.01'\r\n\t\t\t\tvalue={props.volume}\r\n\t\t\t\tonChange={props.changeVolume}\r\n\t\t\t\tonMouseLeave={props.volumeBarVisibility}\r\n\t\t\t\tonMouseOver={props.volumeBarVisibility}\r\n\t\t\t/>\r\n\t\t\t<img\r\n\t\t\t\tclassName='audio-volume'\r\n\t\t\t\tsrc={props.volumeIcon}\r\n\t\t\t\talt='Volume Icon'\r\n\t\t\t\tonClick={props.muteVolume}\r\n\t\t\t\tonMouseOver={props.volumeBarVisibility}\r\n\t\t\t\tonMouseLeave={props.volumeBarVisibility}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default AudioVolume;\r\n","import React from \"react\";\r\nimport \"./AlbumCover.css\";\r\n\r\nconst AlbumCover = (props) => {\r\n\treturn (\r\n\t\t<img\r\n\t\t\tsrc={props.imageSrc}\r\n\t\t\tclassName='audio-album-cover'\r\n\t\t\talt={props.imageSrc}\r\n\t\t/>\r\n\t);\r\n};\r\nexport default AlbumCover;\r\n","import React from \"react\";\r\nimport \"./AudioPlayer.css\";\r\n\r\nimport PlayButton from \"./PlayButton\";\r\nimport AudioCenter from \"./AudioCenter\";\r\nimport AudioVolume from \"./AudioVolume\";\r\nimport AlbumCover from \"./AlbumCover.jsx\";\r\nimport playButtonImage from \"./images/play_button.svg\";\r\nimport pauseButtonImage from \"./images/pause_button.svg\";\r\nimport volumeIcon from \"./images/volumeIcon.svg\";\r\nimport volumeIconMute from \"./images/volumeMute.svg\";\r\n\r\nclass AudioPlayer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentTime: \"0:00\",\r\n\t\t\tpureTime: 0,\r\n\t\t\tpureDuration: 0,\r\n\t\t\tbuttonImage: playButtonImage,\r\n\t\t\tvolumeImage: volumeIcon,\r\n\t\t\tvolumeBarVisibility: \"hide\",\r\n\t\t\tvolume: 1,\r\n\t\t};\r\n\t\tthis.audio = React.createRef();\r\n\t\tthis.playButton = React.createRef();\r\n\t}\r\n\r\n\tplayState = (e) => {\r\n\t\tif (this.audio.current.ended) {\r\n\t\t\tthis.audio.current.load();\r\n\t\t\tthis.setState({\r\n\t\t\t\tbuttonImage: playButtonImage,\r\n\t\t\t});\r\n\t\t} else if (this.audio.current.currentTime === 0) {\r\n\t\t\tthis.setState({ buttonImage: pauseButtonImage });\r\n\t\t\tthis.audio.current.play();\r\n\t\t} else if (this.state.buttonImage === pauseButtonImage) {\r\n\t\t\tthis.setState({ buttonImage: playButtonImage });\r\n\r\n\t\t\tthis.audio.current.pause();\r\n\t\t} else if (this.state.buttonImage === playButtonImage) {\r\n\t\t\tthis.setState({ buttonImage: pauseButtonImage });\r\n\t\t\tthis.audio.current.play();\r\n\t\t}\r\n\t};\r\n\r\n\tgetTimeCalc = (event) => {\r\n\t\tconst audio = this.audio.current;\r\n\t\tconst currentTime =\r\n\t\t\tMath.floor(audio.currentTime.toFixed(0) / 60) +\r\n\t\t\t\":\" +\r\n\t\t\t(audio.currentTime.toFixed(0) < 10\r\n\t\t\t\t? `0${audio.currentTime.toFixed(0)}`\r\n\t\t\t\t: audio.currentTime.toFixed(0) % 60 < 10\r\n\t\t\t\t? `0${audio.currentTime.toFixed(0) % 60}`\r\n\t\t\t\t: audio.currentTime.toFixed(0) % 60\r\n\t\t\t\t? audio.currentTime.toFixed(0) % 60\r\n\t\t\t\t: \"00\");\r\n\t\tthis.setState({ currentTime: currentTime });\r\n\t\tthis.getDuration();\r\n\t};\r\n\r\n\tgetDuration = (event) => {\r\n\t\tconst time =\r\n\t\t\tMath.floor(this.audio.current.duration.toFixed(0)) -\r\n\t\t\tMath.floor(this.audio.current.currentTime.toFixed(0));\r\n\r\n\t\tconst timeRemaining =\r\n\t\t\tMath.floor(time / 60) +\r\n\t\t\t\":\" +\r\n\t\t\t(time < 10\r\n\t\t\t\t? `0${time}`\r\n\t\t\t\t: time % 60 < 10\r\n\t\t\t\t? `0${time % 60}`\r\n\t\t\t\t: time % 60\r\n\t\t\t\t? time % 60\r\n\t\t\t\t: \"00\");\r\n\r\n\t\tthis.setState({ timeRemaining: timeRemaining });\r\n\t\tthis.pureTimeAndDuration();\r\n\t};\r\n\r\n\tpureTimeAndDuration = () => {\r\n\t\tthis.setState({\r\n\t\t\tpureTime: this.audio.current.currentTime,\r\n\t\t\tpureDuration: this.audio.current.duration,\r\n\t\t});\r\n\t};\r\n\r\n\tupdateCurrentTime = (newTime) => {\r\n\t\tthis.audio.current.currentTime = newTime;\r\n\t};\r\n\r\n\tchangeVolume = (event) => {\r\n\t\tthis.setState({ volume: event.target.value });\r\n\t};\r\n\r\n\tmuteVolume = () => {\r\n\t\tif (this.state.volumeImage === volumeIcon) {\r\n\t\t\tthis.setState({ volumeImage: volumeIconMute });\r\n\t\t\tthis.audio.current.muted = true;\r\n\t\t} else {\r\n\t\t\tthis.setState({ volumeImage: volumeIcon });\r\n\t\t\tthis.audio.current.muted = false;\r\n\t\t}\r\n\t};\r\n\r\n\tvolumeBarVisibility = (event) => {\r\n\t\tif (event.type === \"mouseover\") {\r\n\t\t\tthis.setState({ volumeBarVisibility: \"show\" });\r\n\t\t} else {\r\n\t\t\tthis.setState({ volumeBarVisibility: \"hide\" });\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={`audio-player ${this.props.secondClass}`}>\r\n\t\t\t\t<div className='audio-player-row'>\r\n\t\t\t\t\t<audio\r\n\t\t\t\t\t\tclassName={`audio-file `}\r\n\t\t\t\t\t\tsrc={this.props.audioFile}\r\n\t\t\t\t\t\tref={this.audio}\r\n\t\t\t\t\t\tonTimeUpdate={this.getTimeCalc}\r\n\t\t\t\t\t\tonDurationChange={this.getDuration}\r\n\t\t\t\t\t\tonEnded={this.playState}\r\n\t\t\t\t\t\tonLoad={this.playState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PlayButton\r\n\t\t\t\t\t\tplayState={this.playState}\r\n\t\t\t\t\t\timage={this.state.buttonImage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<AudioCenter\r\n\t\t\t\t\t\ttitle={this.props.title}\r\n\t\t\t\t\t\tcomposer={this.props.composer}\r\n\t\t\t\t\t\tcurrentTime={this.state.currentTime}\r\n\t\t\t\t\t\ttimeRemaining={this.state.timeRemaining}\r\n\t\t\t\t\t\tpureTime={this.state.pureTime}\r\n\t\t\t\t\t\tpureDuration={this.state.pureDuration}\r\n\t\t\t\t\t\tupdateCurrentTime={this.updateCurrentTime}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<AudioVolume\r\n\t\t\t\t\t\tchangeVolume={this.changeVolume}\r\n\t\t\t\t\t\tvolumeIcon={this.state.volumeImage}\r\n\t\t\t\t\t\tmuteVolume={this.muteVolume}\r\n\t\t\t\t\t\tvolumeBarVisibility={this.volumeBarVisibility}\r\n\t\t\t\t\t\tvolumeBarVisibilityState={this.state.volumeBarVisibility}\r\n\t\t\t\t\t\tvolume={this.state.volume}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<AlbumCover imageSrc={this.props.imageSrc} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AudioPlayer;\r\n\r\n//Need to add callback function here and send it down to AudioProgress to get  time data to update currentTime in state here.\r\n","import forgivenessImage from \"../images/Forgiveness.jpg\";\r\nimport turningPointImage from \"../images/turningpoint.jpg\";\r\nimport musicForALoveStoryAudio from \"../audio/Music for a Love Story.wav\";\r\nimport turningPointAudio from \"../audio/Turning Point.wav\";\r\n\r\nexport const MediaMusic = [\r\n\t{\r\n\t\ttitle: \"Turning Point\",\r\n\t\taudioName: turningPointAudio,\r\n\t\tid: 1,\r\n\t\timageSrc: turningPointImage,\r\n\t\tsecondClass: \"turning-point\",\r\n\t\tcomposer: \"David Hal Campbell\",\r\n\t},\r\n\t{\r\n\t\ttitle: \"Music for a Love Story\",\r\n\t\taudioName: musicForALoveStoryAudio,\r\n\t\tid: 2,\r\n\t\timageSrc: forgivenessImage,\r\n\t\tsecondClass: \"music-for-a-love-story\",\r\n\t\tcomposer: \"David Campbell\",\r\n\t},\r\n];\r\n","import React from \"react\";\r\nimport AudioPlayer from \"./AudioPlayer\";\r\nimport { MediaMusic } from \"./data/MediaMusic\";\r\n\r\nconst AudioPlayerList = (props) => {\r\n\t// Example of destructuring and extracting variables to use in map\r\n\tconst players = MediaMusic.map((player) => {\r\n\t\treturn (\r\n\t\t\t<AudioPlayer\r\n\t\t\t\ttitle={player.title}\r\n\t\t\t\tkey={player.id}\r\n\t\t\t\taudioFile={player.audioName}\r\n\t\t\t\timageSrc={player.imageSrc}\r\n\t\t\t\tsecondClass={player.secondClass}\r\n\t\t\t\tcomposer={player.composer}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\treturn <div>{players}</div>;\r\n};\r\n\r\nexport default AudioPlayerList;\r\n\r\n// Should have logic for mapping out all audio players including date etc.\r\n//Where is that data held? In Props?\r\n","import React from \"react\";\r\nimport AudioPlayerList from \"./AudioPlayerList\";\r\n\r\nclass App extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AudioPlayerList />\r\n\t\t\t\t<a\r\n\t\t\t\t\tclass='home-button'\r\n\t\t\t\t\thref='https://www.developer.davidhalcampbell.com'>\r\n\t\t\t\t\t<p className='back-to-app'>Back to Apps</p>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import \"./styles.css\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}